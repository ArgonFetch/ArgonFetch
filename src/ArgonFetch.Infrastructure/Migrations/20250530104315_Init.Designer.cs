// <auto-generated />
using ArgonFetch.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ArgonFetch.Infrastructure.Migrations
{
    [DbContext(typeof(ArgonFetchDbContext))]
    [Migration("20250530104315_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArgonFetch.Domain.QualityDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BestQuality")
                        .HasColumnType("text");

                    b.Property<string>("BestQualityDescription")
                        .HasColumnType("text");

                    b.Property<string>("BestQualityFileExtension")
                        .HasColumnType("text");

                    b.Property<string>("MediumQuality")
                        .HasColumnType("text");

                    b.Property<string>("MediumQualityDescription")
                        .HasColumnType("text");

                    b.Property<string>("MediumQualityFileExtension")
                        .HasColumnType("text");

                    b.Property<string>("WorstQuality")
                        .HasColumnType("text");

                    b.Property<string>("WorstQualityDescription")
                        .HasColumnType("text");

                    b.Property<string>("WorstQualityFileExtension")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("QualityDetails");
                });

            modelBuilder.Entity("ArgonFetch.Domain.UrlReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AudioDetailsId")
                        .HasColumnType("integer");

                    b.Property<string>("RequestUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VideoDetailsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AudioDetailsId");

                    b.HasIndex("VideoDetailsId");

                    b.ToTable("UrlReference");
                });

            modelBuilder.Entity("ArgonFetch.Domain.UrlReference", b =>
                {
                    b.HasOne("ArgonFetch.Domain.QualityDetails", "AudioDetails")
                        .WithMany()
                        .HasForeignKey("AudioDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArgonFetch.Domain.QualityDetails", "VideoDetails")
                        .WithMany()
                        .HasForeignKey("VideoDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AudioDetails");

                    b.Navigation("VideoDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
